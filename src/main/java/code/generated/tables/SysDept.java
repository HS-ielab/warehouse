/*
 * This file is generated by jOOQ.
 */
package code.generated.tables;


import code.generated.Keys;
import code.generated.Warehouse;
import code.generated.tables.records.SysDeptRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysDept extends TableImpl<SysDeptRecord> {

    private static final long serialVersionUID = -1405629796;

    /**
     * The reference instance of <code>warehouse.sys_dept</code>
     */
    public static final SysDept SYS_DEPT = new SysDept();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysDeptRecord> getRecordType() {
        return SysDeptRecord.class;
    }

    /**
     * The column <code>warehouse.sys_dept.id</code>.
     */
    public final TableField<SysDeptRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>warehouse.sys_dept.pid</code>.
     */
    public final TableField<SysDeptRecord, Integer> PID = createField(DSL.name("pid"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>warehouse.sys_dept.name</code>.
     */
    public final TableField<SysDeptRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>warehouse.sys_dept.open</code>.
     */
    public final TableField<SysDeptRecord, Integer> OPEN = createField(DSL.name("open"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>warehouse.sys_dept.remark</code>.
     */
    public final TableField<SysDeptRecord, String> REMARK = createField(DSL.name("remark"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>warehouse.sys_dept.address</code>.
     */
    public final TableField<SysDeptRecord, String> ADDRESS = createField(DSL.name("address"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>warehouse.sys_dept.available</code>. 状态【0不可用1可用】
     */
    public final TableField<SysDeptRecord, Integer> AVAILABLE = createField(DSL.name("available"), org.jooq.impl.SQLDataType.INTEGER, this, "状态【0不可用1可用】");

    /**
     * The column <code>warehouse.sys_dept.ordernum</code>. 排序码【为了调试显示顺序】
     */
    public final TableField<SysDeptRecord, Integer> ORDERNUM = createField(DSL.name("ordernum"), org.jooq.impl.SQLDataType.INTEGER, this, "排序码【为了调试显示顺序】");

    /**
     * The column <code>warehouse.sys_dept.createtime</code>.
     */
    public final TableField<SysDeptRecord, LocalDateTime> CREATETIME = createField(DSL.name("createtime"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>warehouse.sys_dept</code> table reference
     */
    public SysDept() {
        this(DSL.name("sys_dept"), null);
    }

    /**
     * Create an aliased <code>warehouse.sys_dept</code> table reference
     */
    public SysDept(String alias) {
        this(DSL.name(alias), SYS_DEPT);
    }

    /**
     * Create an aliased <code>warehouse.sys_dept</code> table reference
     */
    public SysDept(Name alias) {
        this(alias, SYS_DEPT);
    }

    private SysDept(Name alias, Table<SysDeptRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysDept(Name alias, Table<SysDeptRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SysDept(Table<O> child, ForeignKey<O, SysDeptRecord> key) {
        super(child, key, SYS_DEPT);
    }

    @Override
    public Schema getSchema() {
        return Warehouse.WAREHOUSE;
    }

    @Override
    public Identity<SysDeptRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SYS_DEPT;
    }

    @Override
    public UniqueKey<SysDeptRecord> getPrimaryKey() {
        return Keys.KEY_SYS_DEPT_PRIMARY;
    }

    @Override
    public List<UniqueKey<SysDeptRecord>> getKeys() {
        return Arrays.<UniqueKey<SysDeptRecord>>asList(Keys.KEY_SYS_DEPT_PRIMARY);
    }

    @Override
    public SysDept as(String alias) {
        return new SysDept(DSL.name(alias), this);
    }

    @Override
    public SysDept as(Name alias) {
        return new SysDept(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysDept rename(String name) {
        return new SysDept(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysDept rename(Name name) {
        return new SysDept(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, String, Integer, String, String, Integer, Integer, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
