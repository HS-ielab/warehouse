/*
 * This file is generated by jOOQ.
 */
package code.generated.tables;


import code.generated.Keys;
import code.generated.Warehouse;
import code.generated.tables.records.SysLoginfoRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysLoginfo extends TableImpl<SysLoginfoRecord> {

    private static final long serialVersionUID = 35534045;

    /**
     * The reference instance of <code>warehouse.sys_loginfo</code>
     */
    public static final SysLoginfo SYS_LOGINFO = new SysLoginfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysLoginfoRecord> getRecordType() {
        return SysLoginfoRecord.class;
    }

    /**
     * The column <code>warehouse.sys_loginfo.id</code>.
     */
    public final TableField<SysLoginfoRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>warehouse.sys_loginfo.loginname</code>.
     */
    public final TableField<SysLoginfoRecord, String> LOGINNAME = createField(DSL.name("loginname"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>warehouse.sys_loginfo.loginip</code>.
     */
    public final TableField<SysLoginfoRecord, String> LOGINIP = createField(DSL.name("loginip"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>warehouse.sys_loginfo.logintime</code>.
     */
    public final TableField<SysLoginfoRecord, LocalDateTime> LOGINTIME = createField(DSL.name("logintime"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>warehouse.sys_loginfo</code> table reference
     */
    public SysLoginfo() {
        this(DSL.name("sys_loginfo"), null);
    }

    /**
     * Create an aliased <code>warehouse.sys_loginfo</code> table reference
     */
    public SysLoginfo(String alias) {
        this(DSL.name(alias), SYS_LOGINFO);
    }

    /**
     * Create an aliased <code>warehouse.sys_loginfo</code> table reference
     */
    public SysLoginfo(Name alias) {
        this(alias, SYS_LOGINFO);
    }

    private SysLoginfo(Name alias, Table<SysLoginfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysLoginfo(Name alias, Table<SysLoginfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SysLoginfo(Table<O> child, ForeignKey<O, SysLoginfoRecord> key) {
        super(child, key, SYS_LOGINFO);
    }

    @Override
    public Schema getSchema() {
        return Warehouse.WAREHOUSE;
    }

    @Override
    public Identity<SysLoginfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SYS_LOGINFO;
    }

    @Override
    public UniqueKey<SysLoginfoRecord> getPrimaryKey() {
        return Keys.KEY_SYS_LOGINFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<SysLoginfoRecord>> getKeys() {
        return Arrays.<UniqueKey<SysLoginfoRecord>>asList(Keys.KEY_SYS_LOGINFO_PRIMARY);
    }

    @Override
    public SysLoginfo as(String alias) {
        return new SysLoginfo(DSL.name(alias), this);
    }

    @Override
    public SysLoginfo as(Name alias) {
        return new SysLoginfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysLoginfo rename(String name) {
        return new SysLoginfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysLoginfo rename(Name name) {
        return new SysLoginfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
