/*
 * This file is generated by jOOQ.
 */
package code.generated.tables;


import code.generated.Keys;
import code.generated.Warehouse;
import code.generated.tables.records.SysRolePermissionRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysRolePermission extends TableImpl<SysRolePermissionRecord> {

    private static final long serialVersionUID = 1094887676;

    /**
     * The reference instance of <code>warehouse.sys_role_permission</code>
     */
    public static final SysRolePermission SYS_ROLE_PERMISSION = new SysRolePermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysRolePermissionRecord> getRecordType() {
        return SysRolePermissionRecord.class;
    }

    /**
     * The column <code>warehouse.sys_role_permission.rid</code>.
     */
    public final TableField<SysRolePermissionRecord, Integer> RID = createField(DSL.name("rid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>warehouse.sys_role_permission.pid</code>.
     */
    public final TableField<SysRolePermissionRecord, Integer> PID = createField(DSL.name("pid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>warehouse.sys_role_permission</code> table reference
     */
    public SysRolePermission() {
        this(DSL.name("sys_role_permission"), null);
    }

    /**
     * Create an aliased <code>warehouse.sys_role_permission</code> table reference
     */
    public SysRolePermission(String alias) {
        this(DSL.name(alias), SYS_ROLE_PERMISSION);
    }

    /**
     * Create an aliased <code>warehouse.sys_role_permission</code> table reference
     */
    public SysRolePermission(Name alias) {
        this(alias, SYS_ROLE_PERMISSION);
    }

    private SysRolePermission(Name alias, Table<SysRolePermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysRolePermission(Name alias, Table<SysRolePermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SysRolePermission(Table<O> child, ForeignKey<O, SysRolePermissionRecord> key) {
        super(child, key, SYS_ROLE_PERMISSION);
    }

    @Override
    public Schema getSchema() {
        return Warehouse.WAREHOUSE;
    }

    @Override
    public UniqueKey<SysRolePermissionRecord> getPrimaryKey() {
        return Keys.KEY_SYS_ROLE_PERMISSION_PRIMARY;
    }

    @Override
    public List<UniqueKey<SysRolePermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<SysRolePermissionRecord>>asList(Keys.KEY_SYS_ROLE_PERMISSION_PRIMARY);
    }

    @Override
    public List<ForeignKey<SysRolePermissionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SysRolePermissionRecord, ?>>asList(Keys.SYS_ROLE_PERMISSION_IBFK_2, Keys.SYS_ROLE_PERMISSION_IBFK_1);
    }

    public SysRole sysRole() {
        return new SysRole(this, Keys.SYS_ROLE_PERMISSION_IBFK_2);
    }

    public SysPermission sysPermission() {
        return new SysPermission(this, Keys.SYS_ROLE_PERMISSION_IBFK_1);
    }

    @Override
    public SysRolePermission as(String alias) {
        return new SysRolePermission(DSL.name(alias), this);
    }

    @Override
    public SysRolePermission as(Name alias) {
        return new SysRolePermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysRolePermission rename(String name) {
        return new SysRolePermission(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysRolePermission rename(Name name) {
        return new SysRolePermission(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
