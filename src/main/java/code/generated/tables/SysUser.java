/*
 * This file is generated by jOOQ.
 */
package code.generated.tables;


import code.generated.Keys;
import code.generated.Warehouse;
import code.generated.tables.records.SysUserRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysUser extends TableImpl<SysUserRecord> {

    private static final long serialVersionUID = -466190414;

    /**
     * The reference instance of <code>warehouse.sys_user</code>
     */
    public static final SysUser SYS_USER = new SysUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysUserRecord> getRecordType() {
        return SysUserRecord.class;
    }

    /**
     * The column <code>warehouse.sys_user.id</code>.
     */
    public final TableField<SysUserRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>warehouse.sys_user.name</code>.
     */
    public final TableField<SysUserRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>warehouse.sys_user.loginname</code>.
     */
    public final TableField<SysUserRecord, String> LOGINNAME = createField(DSL.name("loginname"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>warehouse.sys_user.pwd</code>.
     */
    public final TableField<SysUserRecord, String> PWD = createField(DSL.name("pwd"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>warehouse.sys_user.address</code>.
     */
    public final TableField<SysUserRecord, String> ADDRESS = createField(DSL.name("address"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>warehouse.sys_user.sex</code>.
     */
    public final TableField<SysUserRecord, Integer> SEX = createField(DSL.name("sex"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>warehouse.sys_user.remark</code>.
     */
    public final TableField<SysUserRecord, String> REMARK = createField(DSL.name("remark"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>warehouse.sys_user.deptid</code>.
     */
    public final TableField<SysUserRecord, Integer> DEPTID = createField(DSL.name("deptid"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>warehouse.sys_user.hiredate</code>.
     */
    public final TableField<SysUserRecord, LocalDateTime> HIREDATE = createField(DSL.name("hiredate"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>warehouse.sys_user.mgr</code>. 上级领导id
     */
    public final TableField<SysUserRecord, Integer> MGR = createField(DSL.name("mgr"), org.jooq.impl.SQLDataType.INTEGER, this, "上级领导id");

    /**
     * The column <code>warehouse.sys_user.available</code>. 是否可用，0不可用，1可用
     */
    public final TableField<SysUserRecord, Integer> AVAILABLE = createField(DSL.name("available"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "是否可用，0不可用，1可用");

    /**
     * The column <code>warehouse.sys_user.ordernum</code>. 排序码
     */
    public final TableField<SysUserRecord, Integer> ORDERNUM = createField(DSL.name("ordernum"), org.jooq.impl.SQLDataType.INTEGER, this, "排序码");

    /**
     * The column <code>warehouse.sys_user.type</code>. 用户类型[0超级管理员，1管理员，2普通用户]
     */
    public final TableField<SysUserRecord, Integer> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.INTEGER, this, "用户类型[0超级管理员，1管理员，2普通用户]");

    /**
     * The column <code>warehouse.sys_user.imgpath</code>. 用户头像地址
     */
    public final TableField<SysUserRecord, String> IMGPATH = createField(DSL.name("imgpath"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "用户头像地址");

    /**
     * The column <code>warehouse.sys_user.salt</code>. 盐
     */
    public final TableField<SysUserRecord, String> SALT = createField(DSL.name("salt"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "盐");

    /**
     * Create a <code>warehouse.sys_user</code> table reference
     */
    public SysUser() {
        this(DSL.name("sys_user"), null);
    }

    /**
     * Create an aliased <code>warehouse.sys_user</code> table reference
     */
    public SysUser(String alias) {
        this(DSL.name(alias), SYS_USER);
    }

    /**
     * Create an aliased <code>warehouse.sys_user</code> table reference
     */
    public SysUser(Name alias) {
        this(alias, SYS_USER);
    }

    private SysUser(Name alias, Table<SysUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysUser(Name alias, Table<SysUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SysUser(Table<O> child, ForeignKey<O, SysUserRecord> key) {
        super(child, key, SYS_USER);
    }

    @Override
    public Schema getSchema() {
        return Warehouse.WAREHOUSE;
    }

    @Override
    public Identity<SysUserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SYS_USER;
    }

    @Override
    public UniqueKey<SysUserRecord> getPrimaryKey() {
        return Keys.KEY_SYS_USER_PRIMARY;
    }

    @Override
    public List<UniqueKey<SysUserRecord>> getKeys() {
        return Arrays.<UniqueKey<SysUserRecord>>asList(Keys.KEY_SYS_USER_PRIMARY, Keys.KEY_SYS_USER_SYS_USER_LOGINNAME);
    }

    @Override
    public List<ForeignKey<SysUserRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SysUserRecord, ?>>asList(Keys.FK_SYS_DEPT_SYS_USER);
    }

    public SysDept sysDept() {
        return new SysDept(this, Keys.FK_SYS_DEPT_SYS_USER);
    }

    @Override
    public SysUser as(String alias) {
        return new SysUser(DSL.name(alias), this);
    }

    @Override
    public SysUser as(Name alias) {
        return new SysUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysUser rename(String name) {
        return new SysUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysUser rename(Name name) {
        return new SysUser(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<Integer, String, String, String, String, Integer, String, Integer, LocalDateTime, Integer, Integer, Integer, Integer, String, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
